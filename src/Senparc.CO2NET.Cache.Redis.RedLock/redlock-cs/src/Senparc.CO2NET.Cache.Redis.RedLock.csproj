<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<TargetFrameworks>net462;netstandard2.0</TargetFrameworks>
		<Version>4.0.1-beta1</Version>
		<AssemblyName>Senparc.CO2NET.Cache.Redis.RedLock</AssemblyName>
		<RootNamespace>Senparc.CO2NET.Cache.Redis.RedLock</RootNamespace>
		<GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
		<Description>
			Senparc.CO2NET.Cache.Redis.RedLock module

			redlock-cs open source project: https://github.com/JeffreySu/redlock-cs

			Senparc.Weixin SDK open source project:
			https://github.com/JeffreySu/WeiXinMPSDK
		</Description>
		<Copyright>Senparc Copyright © 2004~2024</Copyright>
		<PackageTags>Cache,Redis,RedLock,Senparc,盛派,CO2NET</PackageTags>
		<Authors>Jeffrey Su</Authors>
		<Owners>Senparc</Owners>
		<PackageLicenseUrl>https://github.com/JeffreySu/WeiXinMPSDK/blob/master/license.md</PackageLicenseUrl>
		<ProjectUrl>https://github.com/JeffreySu/redlock-cs</ProjectUrl>
		<Title>Senparc.CO2NET.Cache.Redis.RedLock.dll</Title>
		<Summary>Redis Cache (StackExchange) RedLock for CO2NET C#</Summary>
		<PackageProjectUrl>https://github.com/JeffreySu/WeiXinMPSDK</PackageProjectUrl>
		<PackageIcon>icon.jpg</PackageIcon>
		<PackageReleaseNotes>
			v0.0.1
			Rewritten constructor to provide more flexible parameter configuration.

			v0.0.2
			Adjusted reference framework

			v0.0.3
			Provided .net core support

			v0.0.4
			Provided .net framework 4.6.1 support

			v0.1.0
			Provided .NET Core support

			v1.0.1-beta1 Supported .NET Core 2.0

			v1.1.0 Stopped generating separate version for .net core 1.1

			v1.2.0-rc1 Supported .NET Core 2.1.0-rc1-final

			v1.2.5 Released official version supporting .net core 2.1

			======== CO2NET Migration ========

			v1.0.0 Migrated from Senparc.Weixin.Cache.REdis.Redlock
			v2.0.0 Unified support for .NET Core using .NETStandard2.0, abandoned separate adaptation for .NET Core 1.x
			v2.1.1 Upgraded StackExchange.Redis to the latest version
			v2.2.0 Provided asynchronous cache interface
			v2.2.1 Used .ConfigureAwait(false) to avoid asynchronous deadlock
			v2.2.4 Provided signed nuget package (.snupkg)
			[2024-11-28] v4.0.1-beta1 Add UseLowerCaseApiName property for SenparcSetting
</PackageReleaseNotes>
		<RepositoryUrl>https://github.com/Senparc/Senparc.CO2NET</RepositoryUrl>
		<Configurations>Debug;Release;Test</Configurations>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		<OutputPath>..\..\..\BuildOutPut</OutputPath>
		<DefineConstants>TRACE</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
		<OutputPath>..\..\..\..\..\BuildOutPut</OutputPath>
		<DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
		<DocumentationFile>..\..\..\..\..\BuildOutPut\Senparc.CO2NET.Cache.Redis.RedLock.XML</DocumentationFile>
		<Optimize>true</Optimize>
		<DebugType>pdbonly</DebugType>
		<ErrorReport>prompt</ErrorReport>
		<CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net462|AnyCPU'">
		<OutputPath>..\..\..\BuildOutPut\</OutputPath>
		<DocumentationFile>..\..\..\BuildOutPut\net462\Senparc.CO2NET.Cache.Redis.RedLock.xml</DocumentationFile>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard2.0|AnyCPU'">
		<OutputPath>..\..\..\BuildOutPut\</OutputPath>
		<DocumentationFile>..\..\..\BuildOutPut\netstandard2.0\Senparc.CO2NET.Cache.Redis.RedLock.xml</DocumentationFile>
	</PropertyGroup>
	<ItemGroup>
		<None Include="..\..\..\Senparc.CO2NET\icon.jpg" Pack="true" Visible="false" PackagePath="" />
	</ItemGroup>
	<ItemGroup>
		<PackageReference Include="StackExchange.Redis" Version="2.7.4" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\..\..\Senparc.CO2NET\Senparc.CO2NET.csproj" />
	</ItemGroup>
</Project>